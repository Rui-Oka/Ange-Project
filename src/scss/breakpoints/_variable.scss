$col-white: #FAF6F2;
$col-pink: #EBD6CC;
$col-black: #434343;
$col-brown: #391D0A;

@import url('https://fonts.googleapis.com/css2?family=EB+Garamond&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Dancing+Script&display=swap');
@font-face {
	font-family: 'Prata';
	src: url('/dist/font/Prata-Regular.ttf');
}
$font-family: 'YuMincho', '游明朝体', 'Yu Mincho', '游明朝','Hiragino Mincho ProN','ヒラギノ明朝 ProN','Hiragino Mincho Pro','ヒラギノ明朝 Pro', 'ＭＳ ゴシック', sans-serif;
$font-family-eb:'EB Garamond','YuMincho', '游明朝体', 'Yu Mincho', '游明朝', serif;
$font-family-dancing:'Dancing Script','YuMincho', '游明朝体', 'Yu Mincho', '游明朝', cursive;
$font-family-Prata: Prata,'YuMincho', '游明朝体', 'Yu Mincho', '游明朝', cursive;


//ブレイクポイント
$breakpoints: (
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px,
) !default;

@mixin mq($type, $bp1, $bp2:0) {
    @if ($type == min) {
        @media screen and (min-width: #{map-get($breakpoints, $bp1)}) {
        @content;
        }
    } @else if ($type == max) {
        $width: map-get($breakpoints, $bp1);
        $width: $width - 1px;
        @media screen and (max-width: #{$width}) {
        @content;
        }
    } @else if ($type == bw) { // bw → between
        $width: map-get($breakpoints, $bp2);
        $width: $width - 1px;
        @media screen and (min-width: #{map-get($breakpoints, $bp1)})
        and (max-width: #{$width}) {
        @content;
        }
    }
}

@function calc-size($size, $width: 428) {
    @return calc( #{$size} * (100vw / #{$width}))
}

@keyframes skewanime {
	100% {
		left:-10%;/*画面の見えていない左から右へ移動する終了地点*/
	}
}